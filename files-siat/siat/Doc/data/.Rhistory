}
feature <- as.data.frame(feature)
classId <- c(rep("1",18),rep("2",18))
wtSc<-data.frame(cbind(classId,feature))
library(party)
ct <- ctree(classId~.,data=wtSc,
controls = ctree_control(minsplit=30,minbucket=10,maxdepth=5))
pClassId <- predict(ct)
table(classId,pClassId)
(sum(classId==pClassId))/nrow(wtSc)
View(wtSc)
View(feature)
library(wavelets)
feature<-NULL
mydata <-  read.table("E://siat//Doc//data//data.txt",header=F, sep="")
View(mydata)
for(i in 1:nrow(mydata)){
a <- t(mydata[i,])
wt <- dwt(a,filter="la8",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
View(feature)
feature <- as.data.frame(feature)
classId <- c(rep("1",100),rep("2",100),rep("3",100),
rep("4",100),rep("5",100),rep("6",100))
wtSc<-data.frame(cbind(classId,feature))
library(party)
ct <- ctree(classId~.,data=wtSc,
controls = ctree_control(minsplit=30,minbucket=10,maxdepth=5))
pClassId <- predict(ct)
table(classId,pClassId)
View(a)
library(wavelets)
library(RMySQL)
conn = dbConnect(MySQL(),host="localhost",dbname="mitdb",user="root",password="")
res <- dbGetQuery(conn,"select va from db1")
#mydata2 <-read.table(res,header=F, sep="",fileEncoding="UTF-8")
#w<-matrix(res,nrow=18,ncol=3600)
feature <- NULL
for (i in 1:36){
m <- 1
n <- 3600
a <- res[m:n,]
wt <- dwt(a,filter="la8",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
m <- m + 3600
n <- n + 3600
}
View(feature)
for (i in 1:36;m <- m + 3600,n <- n + 3600){
for (i in 1:36;m <- m + 3600;n <- n + 3600){
for(m in 1:36){}
for(m in 1:36){j<-list(m + 3600,)}
for(m in 1:36){j<-list(m + 3600)}
j
for(m in 1:36){j<-list(m + 3600,j)}
j
for(m in 1:36){j<-list(m*3600,j)}
j
for(m in 1:36){j<-list(m*3600,j)}
j
for(m in 1:36){j<-list(m*3600,j)}
j
for(m in 1:36){j<-list(m*3600)}
for(m in 1:36){
j<-list(m*3600)
n<-list(j)
}
n
for(m in 1:36){
j<-list(m*3600)
n<-list.append(j)
}
for(m in 1:36){
j<-list(m*3600)
n.list<-j
}
n
for(m in 1:36){
j<-list(m*3600)
n.list$<-j
i <- 1
while(i<36){
l[[i]] <- 3600*i
i <- i+1
}
i <- 1
l <- list()
while(i<36){
l[[i]] <- 3600*i
i <- i+1
}
l
l
f <- 0
for (n in l){
f <- f + n
}
f
library(wavelets)
library(RMySQL)
conn = dbConnect(MySQL(),host="localhost",dbname="mitdb",user="root",password="")
res <- dbGetQuery(conn,"select va from db1")
feature <- NULL
i <- 1
l <- list()
while(i<36){
l[[i]] <- 3600*i
i <- i+1
}
for (i in l){
a <- res[(i-3600):i,]
wt <- dwt(a,filter="la8",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
feature <- as.data.frame(feature)
View(feature)
classId <- c(rep("1",18),rep("2",18))
wtSc<-data.frame(cbind(classId,feature))
i <- 1
l <- list()
while(i<36){
l[[i]] <- 3600*i
i <- i+1
}
l
i <- 0
l <- list()
while(i<36){
l[[i]] <- 3600*i
i <- i+1
}
library(wavelets)
library(RMySQL)
conn = dbConnect(MySQL(),host="localhost",dbname="mitdb",user="root",password="")
res <- dbGetQuery(conn,"select va from db1")
feature <- NULL
i <- 1
l <- list()
while(i<37){
l[[i]] <- 3600*i
i <- i+1
}
for (i in l){
a <- res[(i-3600):i,]
wt <- dwt(a,filter="la8",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
feature <- as.data.frame(feature)
View(feature)
classId <- c(rep("1",18),rep("2",18))
wtSc<-data.frame(cbind(classId,feature))
library(party)
ct <- ctree(classId~.,data=wtSc,
controls = ctree_control(minsplit=30,minbucket=10,maxdepth=5))
pClassId <- predict(ct)
table(classId,pClassId)
(sum(classId==pClassId))/nrow(wtSc)
View(wtSc)
library(wavelets)
library(RMySQL)
conn = dbConnect(MySQL(),host="localhost",dbname="mitdb",user="root",password="")
res <- dbGetQuery(conn,"select va from db1")
feature <- NULL
i <- 1
l <- list()
while(i<37){
l[[i]] <- 3600*i
i <- i+1
}
for (i in l){
a <- res[(i-3600):i,]
wt <- dwt(a,filter="haar",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
feature <- as.data.frame(feature)
classId <- c(rep("1",18),rep("2",18))
wtSc<-data.frame(cbind(classId,feature))
library(party)
ct <- ctree(classId~.,data=wtSc,
controls = ctree_control(minsplit=30,minbucket=10,maxdepth=5))
pClassId <- predict(ct)
table(classId,pClassId)
(sum(classId==pClassId))/nrow(wtSc)
View(wtSc)
library(wavelets)
library(RMySQL)
conn = dbConnect(MySQL(),host="localhost",dbname="mitdb",user="root",password="")
res <- dbGetQuery(conn,"select va from db1")
feature <- NULL
i <- 1
l <- list()
while(i<37){
l[[i]] <- 3600*i
i <- i+1
}
for (i in l){
a <- res[(i-3600):i,]
wt <- dwt(a,filter="da8",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
for (i in l){
a <- res[(i-3600):i,]
wt <- dwt(a,filter="la8",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
feature <- as.data.frame(feature)
View(feature)
classId <- c(rep("1",18),rep("2",18))
wtSc<-data.frame(cbind(classId,feature))
View(wtSc)
library(party)
ct <- ctree(classId~.,data=wtSc,
controls = ctree_control(minsplit=30,minbucket=10,maxdepth=5))
pClassId <- predict(ct)
table(classId,pClassId)
for(i in 1:nrow(mydata)){
library(wavelets)
feature<-NULL
#headeris whether the file contains the names of the variables as its first line
#sep   split num
mydata <-  read.table("E://siat//Doc//data//data.txt",header=F, sep="")
#nrow
for(i in 1:nrow(mydata)){
a <- t(mydata[i,])
wt <- dwt(a,filter="la10",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
feature <- as.data.frame(feature)
#rep==repeat
classId <- c(rep("1",100),rep("2",100),rep("3",100),
rep("4",100),rep("5",100),rep("6",100))
wtSc<-data.frame(cbind(classId,feature))
library(party)
ct <- ctree(classId~.,data=wtSc,
controls = ctree_control(minsplit=30,minbucket=10,maxdepth=5))
pClassId <- predict(ct)
library(wavelets)
feature<-NULL
#headeris whether the file contains the names of the variables as its first line
#sep   split num
mydata <-  read.table("E://siat//Doc//data//data.txt",header=F, sep="")
#nrow
for(i in 1:nrow(mydata)){
a <- t(mydata[i,])
wt <- dwt(a,filter="la10",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
feature <- as.data.frame(feature)
#rep==repeat
classId <- c(rep("1",100),rep("2",100),rep("3",100),
rep("4",100),rep("5",100),rep("6",100))
wtSc<-data.frame(cbind(classId,feature))
library(party)
ct <- ctree(classId~.,data=wtSc,
controls = ctree_control(minsplit=30,minbucket=10,maxdepth=5))
pClassId <- predict(ct)
table(classId,pClassId)
(sum(classId==pClassId))/nrow(wtSc)
library(wavelets)
library(RMySQL)
conn = dbConnect(MySQL(),host="localhost",dbname="mitdb",user="root",password="")
res <- dbGetQuery(conn,"select va from db1")
feature <- NULL
i <- 1
l <- list()
while(i<37){
l[[i]] <- 3600*i
i <- i+1
}
for (i in l){
a <- res[(i-3600):i,]
wt <- dwt(a,filter="la10",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
feature <- as.data.frame(feature)
classId <- c(rep("1",18),rep("2",18))
wtSc<-data.frame(cbind(classId,feature))
library(party)
ct <- ctree(classId~.,data=wtSc,
controls = ctree_control(minsplit=30,minbucket=10,maxdepth=5))
pClassId <- predict(ct)
table(classId,pClassId)
(sum(classId==pClassId))/nrow(wtSc)
for (i in l){
a <- res[(i-3600):i,]
wt <- dwt(a,filter="bl14",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
feature <- as.data.frame(feature)
classId <- c(rep("1",18),rep("2",18))
wtSc<-data.frame(cbind(classId,feature))
library(party)
ct <- ctree(classId~.,data=wtSc,
controls = ctree_control(minsplit=30,minbucket=10,maxdepth=5))
pClassId <- predict(ct)
table(classId,pClassId)
(sum(classId==pClassId))/nrow(wtSc)
library(wavelets)
library(RMySQL)
conn = dbConnect(MySQL(),host="localhost",dbname="mitdb",user="root",password="")
res <- dbGetQuery(conn,"select va from db1")
feature <- NULL
i <- 1
l <- list()
while(i<37){
l[[i]] <- 3600*i
i <- i+1
}
for (i in l){
a <- res[(i-3600):i,]
wt <- dwt(a,filter="bl14",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
feature <- as.data.frame(feature)
classId <- c(rep("1",18),rep("2",18))
wtSc<-data.frame(cbind(classId,feature))
library(party)
ct <- ctree(classId~.,data=wtSc,
controls = ctree_control(minsplit=30,minbucket=10,maxdepth=5))
pClassId <- predict(ct)
table(classId,pClassId)
(sum(classId==pClassId))/nrow(wtSc)
library(wavelets)
library(RMySQL)
conn = dbConnect(MySQL(),host="localhost",dbname="mitdb",user="root",password="")
res <- dbGetQuery(conn,"select va from db1")
feature <- NULL
i <- 1
l <- list()
while(i<37){
l[[i]] <- 3600*i
i <- i+1
}
for (i in l){
a <- res[(i-3600):i,]
wt <- dwt(a,filter="c6",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
feature <- as.data.frame(feature)
classId <- c(rep("1",18),rep("2",18))
wtSc<-data.frame(cbind(classId,feature))
library(party)
ct <- ctree(classId~.,data=wtSc,
controls = ctree_control(minsplit=30,minbucket=10,maxdepth=5))
pClassId <- predict(ct)
table(classId,pClassId)
(sum(classId==pClassId))/nrow(wtSc)
?ctree_control
ct <- ctree(classId~.,data=wtSc,controls = ctree_control(minsplit=5,minbucket=5,maxdepth=5))
pClassId <- predict(ct)
table(classId,pClassId)
(sum(classId==pClassId))/nrow(wtSc)
library(wavelets)
library(RMySQL)
conn = dbConnect(MySQL(),host="localhost",dbname="mitdb",user="root",password="")
res <- dbGetQuery(conn,"select va from db1")
feature <- NULL
i <- 1
l <- list()
while(i<37){
l[[i]] <- 3600*i
i <- i+1
}
for (i in l){
a <- res[(i-3600):i,]
wt <- dwt(a,filter="la8",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
feature <- as.data.frame(feature)
classId <- c(rep("1",18),rep("2",18))
wtSc<-data.frame(cbind(classId,feature))
library(party)
ct <- ctree(classId~.,data=wtSc,
controls = ctree_control(minsplit=5,minbucket=5,maxdepth=10))
pClassId <- predict(ct)
table(classId,pClassId)
(sum(classId==pClassId))/nrow(wtSc)
library(wavelets)
library(RMySQL)
conn = dbConnect(MySQL(),host="localhost",dbname="mitdb",user="root",password="")
res <- dbGetQuery(conn,"select va from db1")
feature <- NULL
i <- 1
l <- list()
while(i<37){
l[[i]] <- 3600*i
i <- i+1
}
for (i in l){
a <- res[(i-3600):i,]
wt <- dwt(a,filter="la8",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
feature <- as.data.frame(feature)
classId <- c(rep("1",18),rep("2",18))
wtSc<-data.frame(cbind(classId,feature))
library(party)
ct <- ctree(classId~.,data=wtSc,
)
pClassId <- predict(ct)
table(classId,pClassId)
(sum(classId==pClassId))/nrow(wtSc)
#mydata2 <-read.table(res,header=F, sep="",fileEncoding="UTF-8")
library(wavelets)
library(RMySQL)
conn = dbConnect(MySQL(),host="localhost",dbname="mitdb",user="root",password="")
res <- dbGetQuery(conn,"select va from db1")
feature <- NULL
i <- 1
l <- list()
while(i<37){
l[[i]] <- 3600*i
i <- i+1
}
for (i in l){
a <- res[(i-3600):i,]
wt <- dwt(a,filter="la8",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
feature <- as.data.frame(feature)
classId <- c(rep("1",18),rep("2",18))
wtSc<-data.frame(cbind(classId,feature))
library(party)
ct <- ctree(classId~.,data=wtSc,
controls = ctree_control(minsplit=3,minbucket=3,maxdepth=10))
pClassId <- predict(ct)
table(classId,pClassId)
(sum(classId==pClassId))/nrow(wtSc)
plot(ct, ip_args=list(pval=FALSE), ep_args=list(digits=0))
i
i
library(wavelets)
feature<-NULL
mydata <-  read.table("E://siat//Doc//data//data.txt",header=F, sep="")
#nrow
for(i in 1:nrow(mydata)){
a <- t(mydata[i,])
wt <- dwt(a,filter="la10",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
feature <- as.data.frame(feature)
#rep==repeat
classId <- c(rep("1",100),rep("2",100),rep("3",100),
rep("4",100),rep("5",100),rep("6",100))
wtSc<-data.frame(cbind(classId,feature))
library(party)
ct <- ctree(classId~.,data=wtSc,
controls = ctree_control(minsplit=30,minbucket=10,maxdepth=5))
pClassId <- predict(ct)
table(classId,pClassId)
(sum(classId==pClassId))/nrow(wtSc)
plot(ct, ip_args=list(pval=FALSE), ep_args=list(digits=0))
View(feature)
View(wtSc)
library(wavelets)
library(RMySQL)
conn = dbConnect(MySQL(),host="localhost",dbname="mitdb",user="root",password="")
res <- dbGetQuery(conn,"select va from db1")
feature <- NULL
i <- 1
l <- list()
while(i<37){
l[[i]] <- 3600*i
i <- i+1
}
for (i in l){
a <- res[(i-3600):i,]
wt <- dwt(a,filter="la8",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
feature <- as.data.frame(feature)
classId <- c(rep("1",18),rep("2",18))
wtSc<-data.frame(cbind(classId,feature))
View(wtSc)
library(wavelets)
feature<-NULL
mydata <-  read.table("E://siat//Doc//data//data.txt",header=F, sep="")
#nrow
for(i in 1:nrow(mydata)){
a <- t(mydata[i,])
wt <- dwt(a,filter="la10",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
feature <- as.data.frame(feature)
classId <- c(rep("1",100),rep("2",100),rep("3",100),
rep("4",100),rep("5",100),rep("6",100))
wtSc<-data.frame(cbind(classId,feature))
library(wavelets)
library(RMySQL)
conn = dbConnect(MySQL(),host="localhost",dbname="mitdb",user="root",password="")
res <- dbGetQuery(conn,"select va from db1")
feature <- NULL
i <- 1
l <- list()
while(i<37){
l[[i]] <- 3600*i
i <- i+1
}
for (i in l){
a <- res[(i-3600):i,]
wt <- dwt(a,filter="la8",boundary="periodic")
feature <- rbind(feature,unlist(c(wt@W,wt@V[[wt@level]])))
}
library(wavelets)
library(RMySQL)
conn = dbConnect(MySQL(),host="localhost",dbname="mitdb",user="root",password="")
res <- dbGetQuery(conn,"select va from db1")
library(wavelets)
library(RMySQL)
conn = dbConnect(MySQL(),host="localhost",dbname="mitdb",user="root",password="")
res <- dbGetQuery(conn,"select va from db1")
